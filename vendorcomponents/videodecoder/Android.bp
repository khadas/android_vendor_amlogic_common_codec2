/*
 * Copyright (C) 2023 Amlogic, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package {
    //   legacy_proprietary
    default_applicable_licenses: ["vendor_amlogic_common_license"],
}

cc_library_shared {
    name: "libcodec2_aml_video_decoder",
    defaults: [
        "libchrome-defaults",
        "libcodec2-impl-defaults",
    ],
    vendor: true,

    srcs: [
        "C2VdecComponent.cpp",
        "mediahalwraper/VideoDecWraper.cpp",
        "mediahalwraper/VideoTunnelRendererWraper.cpp",
        "mediahalwraper/TunerPassthroughWrapper.cpp",
        "utils/C2VdecInterfaceImpl.cpp",
        "utils/C2VdecDeviceUtil.cpp",
        "utils/C2VdecBlockPoolUtil.cpp",
        "utils/C2VdecTunnelHelper.cpp",
        "utils/C2VdecTunerPassthroughHelper.cpp",
        "utils/C2VdecDebugUtil.cpp",
        "utils/C2VdecDequeueThreadUtil.cpp",
    ],

    local_include_dirs: [
        "include",
        "include/vdecintf",
        "utils/include",
        "mediahalwraper/include",
    ],

    shared_libs: [
        "android.hardware.graphics.allocator@2.0",
        "android.hardware.graphics.bufferqueue@2.0",
        "android.hardware.graphics.mapper@2.0",
        "android.hardware.media.bufferpool@2.0",
        "libbase",
        "libbinder",
        "liblog",
        "libstagefright_bufferqueue_helper",
        "libsfplugin_ccodec_utils",
        "libcodec2_simple_component",
        "libstagefright_foundation",
        "libstagefright_bufferpool@2.0",
        "libutils",
        "libcutils",
        "libcodec2",
        "libcodec2_vndk",
        "libui",
        "libutilscallstack",
        "libchrome",
        "libevent",
        "libvendor_c2componentstore",
        "libamgralloc_ext",
        "libstagefright_xmlparser",
    ],

    header_libs: [
        "media_plugin_headers",
        "libcodec2_headers",
        "libcodec2_internal",
        "libstagefright_headers",
        "libnativewindow_headers",
        "libnativebase_headers",
        "libmediahal_headers",
        "libvendor_c2componentstore_headers",
        "libvendor_component_headers",
        "libstagefright_xmlparser_headers",
    ],

    // -Wno-unused-parameter is needed for libchrome/base codes
    cflags: [
        "-Werror",
        "-Wall",
        "-Wno-unused-parameter",
    ] + [
        "-Wno-unused-lambda-capture",
        "-Wno-unknown-warning-option",
    ],
    //Only enabled when using Asan for debugging or self-testing
    // ] + [
    //     "-g",
    //     "-fno-omit-frame-pointer",
    // ],
    // relative_install_path: "asan",
    // sanitize: {
    //     address: true,
    //     misc_undefined: [
    //         "unsigned-integer-overflow",
    //         "signed-integer-overflow",
    //     ],
    // },

    ldflags: ["-Wl,-Bsymbolic"],

    static_libs: ["libjsoncpp"],
}
